{"name": "test_industry_card_is_clickable", "status": "failed", "statusDetails": {"message": "Failed: Ошибка перенаправления: Message:", "trace": "branze_setup = <pages.branze_page.BranzePage object at 0x0000021391B37950>\n\n    @allure.feature(\"Интерактивность карточек отрасли\")\n    def test_industry_card_is_clickable(branze_setup):\n        branze_page = branze_setup\n        with allure.step(\"Проверка кликабельности карточки отрасли\"):\n            industry_card = branze_page.wait_for_element(branze_page.INDUSTRY_CARD_LINK)\n    \n            with allure.step(\"Прокрутка к карточке отрасли\"):\n                branze_page.driver.execute_script(\"arguments[0].scrollIntoView({block: 'center'});\", industry_card)\n    \n            with allure.step(\"Клик по карточке отрасли с использованием ActionChains\"):\n                actions = ActionChains(branze_page.driver)\n                actions.move_to_element(industry_card).click().perform()\n    \n            with allure.step(\"Проверка перенаправления после клика\"):\n                expected_url = industry_card.get_attribute('href')\n                try:\n>                   WebDriverWait(branze_page.driver, 10).until(\n                        EC.url_contains(expected_url)\n                    )\n\ntests\\test_branze_page.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4d2541f82ffadcb90143a77ed975fc04\")>\nmethod = <function url_contains.<locals>._predicate at 0x0000021391B3BB00>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nbranze_setup = <pages.branze_page.BranzePage object at 0x0000021391B37950>\n\n    @allure.feature(\"Интерактивность карточек отрасли\")\n    def test_industry_card_is_clickable(branze_setup):\n        branze_page = branze_setup\n        with allure.step(\"Проверка кликабельности карточки отрасли\"):\n            industry_card = branze_page.wait_for_element(branze_page.INDUSTRY_CARD_LINK)\n    \n            with allure.step(\"Прокрутка к карточке отрасли\"):\n                branze_page.driver.execute_script(\"arguments[0].scrollIntoView({block: 'center'});\", industry_card)\n    \n            with allure.step(\"Клик по карточке отрасли с использованием ActionChains\"):\n                actions = ActionChains(branze_page.driver)\n                actions.move_to_element(industry_card).click().perform()\n    \n            with allure.step(\"Проверка перенаправления после клика\"):\n                expected_url = industry_card.get_attribute('href')\n                try:\n                    WebDriverWait(branze_page.driver, 10).until(\n                        EC.url_contains(expected_url)\n                    )\n                    current_url = branze_page.driver.current_url\n                    allure.attach(current_url, name=\"Current URL\", attachment_type=allure.attachment_type.TEXT)\n                    assert current_url == expected_url, f\"Перенаправление не произошло. Текущий URL: {current_url}, ожидаемый URL: {expected_url}\"\n                except Exception as e:\n                    allure.attach(str(e), name=\"Ошибка перенаправления\", attachment_type=allure.attachment_type.TEXT)\n>                   pytest.fail(f\"Ошибка перенаправления: {e}\")\nE                   Failed: Ошибка перенаправления: Message:\n\ntests\\test_branze_page.py:50: Failed"}, "steps": [{"name": "Проверка кликабельности карточки отрасли", "status": "failed", "statusDetails": {"message": "Failed: Ошибка перенаправления: Message: \n\n", "trace": "  File \"C:\\Users\\alasm\\PROJECT-DIPLOM\\DIPLOM\\tests\\test_branze_page.py\", line 50, in test_industry_card_is_clickable\n    pytest.fail(f\"Ошибка перенаправления: {e}\")\n  File \"C:\\Users\\alasm\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "Прокрутка к карточке отрасли", "status": "passed", "start": 1739036817633, "stop": 1739036817648}, {"name": "Клик по карточке отрасли с использованием ActionChains", "status": "passed", "start": 1739036817648, "stop": 1739036817996}, {"name": "Проверка перенаправления после клика", "status": "failed", "statusDetails": {"message": "Failed: Ошибка перенаправления: Message: \n\n", "trace": "  File \"C:\\Users\\alasm\\PROJECT-DIPLOM\\DIPLOM\\tests\\test_branze_page.py\", line 50, in test_industry_card_is_clickable\n    pytest.fail(f\"Ошибка перенаправления: {e}\")\n  File \"C:\\Users\\alasm\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "attachments": [{"name": "Ошибка перенаправления", "source": "587d346c-9257-4fb9-839e-309f6f191952-attachment.txt", "type": "text/plain"}], "start": 1739036817996, "stop": 1739036828299}], "start": 1739036817613, "stop": 1739036828346}], "start": 1739036817613, "stop": 1739036828348, "uuid": "f3f814d4-e63b-4328-bed4-eccd05af35d5", "historyId": "9e3bb962837d2bd28c98624835814d5c", "testCaseId": "9e3bb962837d2bd28c98624835814d5c", "fullName": "tests.test_branze_page#test_industry_card_is_clickable", "labels": [{"name": "feature", "value": "Интерактивность карточек отрасли"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_branze_page"}, {"name": "host", "value": "kachanneee"}, {"name": "thread", "value": "43380-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_branze_page"}]}