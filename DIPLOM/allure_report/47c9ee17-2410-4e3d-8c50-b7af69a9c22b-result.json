{"name": "test_industry_card_is_clickable", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (169, 2295)\n  (Session info: chrome=132.0.6834.83)\nStacktrace:\n\tGetHandleVerifier [0x00007FF79D1802F5+28725]\n\t(No symbol) [0x00007FF79D0E2AE0]\n\t(No symbol) [0x00007FF79CF7510A]\n\t(No symbol) [0x00007FF79CFD10F8]\n\t(No symbol) [0x00007FF79CFCEB42]\n\t(No symbol) [0x00007FF79CFCBC51]\n\t(No symbol) [0x00007FF79CFCABB1]\n\t(No symbol) [0x00007FF79CFBC6B4]\n\t(No symbol) [0x00007FF79CFEFFAA]\n\t(No symbol) [0x00007FF79CFBBF86]\n\t(No symbol) [0x00007FF79CFF01C0]\n\t(No symbol) [0x00007FF79D010181]\n\t(No symbol) [0x00007FF79CFEFD53]\n\t(No symbol) [0x00007FF79CFBA0E3]\n\t(No symbol) [0x00007FF79CFBB471]\n\tGetHandleVerifier [0x00007FF79D4AF30D+3366989]\n\tGetHandleVerifier [0x00007FF79D4C12F0+3440688]\n\tGetHandleVerifier [0x00007FF79D4B78FD+3401277]\n\tGetHandleVerifier [0x00007FF79D24AAAB+858091]\n\t(No symbol) [0x00007FF79D0EE74F]\n\t(No symbol) [0x00007FF79D0EA304]\n\t(No symbol) [0x00007FF79D0EA49D]\n\t(No symbol) [0x00007FF79D0D8B69]\n\tBaseThreadInitThunk [0x00007FFD4E48259D+29]\n\tRtlUserThreadStart [0x00007FFD4F80AF38+40]", "trace": "branze_setup = <pages.branze_page.BranzePage object at 0x0000024D932B7830>\n\n    @allure.feature(\"Интерактивность карточек отрасли\")\n    def test_industry_card_is_clickable(branze_setup):\n        branze_page = branze_setup\n        with allure.step(\"Проверка кликабельности карточки отрасли\"):\n            industry_card = branze_page.wait_for_element(branze_page.INDUSTRY_CARD_LINK)\n    \n            with allure.step(\"Клик по карточке отрасли\"):\n>               industry_card.click()\n\ntests\\test_branze_page.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000024D9240B2C0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF79D0D8B69]\\\\n\\\\tBaseThreadInitThunk [0x00007FFD4E48259D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFD4F80AF38+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (169, 2295)\nE         (Session info: chrome=132.0.6834.83)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF79D1802F5+28725]\nE       \t(No symbol) [0x00007FF79D0E2AE0]\nE       \t(No symbol) [0x00007FF79CF7510A]\nE       \t(No symbol) [0x00007FF79CFD10F8]\nE       \t(No symbol) [0x00007FF79CFCEB42]\nE       \t(No symbol) [0x00007FF79CFCBC51]\nE       \t(No symbol) [0x00007FF79CFCABB1]\nE       \t(No symbol) [0x00007FF79CFBC6B4]\nE       \t(No symbol) [0x00007FF79CFEFFAA]\nE       \t(No symbol) [0x00007FF79CFBBF86]\nE       \t(No symbol) [0x00007FF79CFF01C0]\nE       \t(No symbol) [0x00007FF79D010181]\nE       \t(No symbol) [0x00007FF79CFEFD53]\nE       \t(No symbol) [0x00007FF79CFBA0E3]\nE       \t(No symbol) [0x00007FF79CFBB471]\nE       \tGetHandleVerifier [0x00007FF79D4AF30D+3366989]\nE       \tGetHandleVerifier [0x00007FF79D4C12F0+3440688]\nE       \tGetHandleVerifier [0x00007FF79D4B78FD+3401277]\nE       \tGetHandleVerifier [0x00007FF79D24AAAB+858091]\nE       \t(No symbol) [0x00007FF79D0EE74F]\nE       \t(No symbol) [0x00007FF79D0EA304]\nE       \t(No symbol) [0x00007FF79D0EA49D]\nE       \t(No symbol) [0x00007FF79D0D8B69]\nE       \tBaseThreadInitThunk [0x00007FFD4E48259D+29]\nE       \tRtlUserThreadStart [0x00007FFD4F80AF38+40]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementClickInterceptedException"}, "steps": [{"name": "Проверка кликабельности карточки отрасли", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (169, 2295)\n  (Session info: chrome=132.0.6834.83)\nStacktrace:\n\tGetHandleVerifier [0x00007FF79D1802F5+28725]\n\t(No symbol) [0x00007FF79D0E2AE0]\n\t(No symbol) [0x00007FF79CF7510A]\n\t(No symbol) [0x00007FF79CFD10F8]\n\t(No symbol) [0x00007FF79CFCEB42]\n\t(No symbol) [0x00007FF79CFCBC51]\n\t(No symbol) [0x00007FF79CFCABB1]\n\t(No symbol) [0x00007FF79CFBC6B4]\n\t(No symbol) [0x00007FF79CFEFFAA]\n\t(No symbol) [0x00007FF79CFBBF86]\n\t(No symbol) [0x00007FF79CFF01C0]\n\t(No symbol) [0x00007FF79D010181]\n\t(No symbol) [0x00007FF79CFEFD53]\n\t(No symbol) [0x00007FF79CFBA0E3]\n\t(No symbol) [0x00007FF79CFBB471]\n\tGetHandleVerifier [0x00007FF79D4AF30D+3366989]\n\tGetHandleVerifier [0x00007FF79D4C12F0+3440688]\n\tGetHandleVerifier [0x00007FF79D4B78FD+3401277]\n\tGetHandleVerifier [0x00007FF79D24AAAB+858091]\n\t(No symbol) [0x00007FF79D0EE74F]\n\t(No symbol) [0x00007FF79D0EA304]\n\t(No symbol) [0x00007FF79D0EA49D]\n\t(No symbol) [0x00007FF79D0D8B69]\n\tBaseThreadInitThunk [0x00007FFD4E48259D+29]\n\tRtlUserThreadStart [0x00007FFD4F80AF38+40]\n\n", "trace": "  File \"C:\\Users\\alasm\\PROJECT-DIPLOM\\DIPLOM\\tests\\test_branze_page.py\", line 32, in test_industry_card_is_clickable\n    industry_card.click()\n  File \"C:\\Users\\alasm\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\alasm\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\alasm\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\alasm\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Клик по карточке отрасли", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (169, 2295)\n  (Session info: chrome=132.0.6834.83)\nStacktrace:\n\tGetHandleVerifier [0x00007FF79D1802F5+28725]\n\t(No symbol) [0x00007FF79D0E2AE0]\n\t(No symbol) [0x00007FF79CF7510A]\n\t(No symbol) [0x00007FF79CFD10F8]\n\t(No symbol) [0x00007FF79CFCEB42]\n\t(No symbol) [0x00007FF79CFCBC51]\n\t(No symbol) [0x00007FF79CFCABB1]\n\t(No symbol) [0x00007FF79CFBC6B4]\n\t(No symbol) [0x00007FF79CFEFFAA]\n\t(No symbol) [0x00007FF79CFBBF86]\n\t(No symbol) [0x00007FF79CFF01C0]\n\t(No symbol) [0x00007FF79D010181]\n\t(No symbol) [0x00007FF79CFEFD53]\n\t(No symbol) [0x00007FF79CFBA0E3]\n\t(No symbol) [0x00007FF79CFBB471]\n\tGetHandleVerifier [0x00007FF79D4AF30D+3366989]\n\tGetHandleVerifier [0x00007FF79D4C12F0+3440688]\n\tGetHandleVerifier [0x00007FF79D4B78FD+3401277]\n\tGetHandleVerifier [0x00007FF79D24AAAB+858091]\n\t(No symbol) [0x00007FF79D0EE74F]\n\t(No symbol) [0x00007FF79D0EA304]\n\t(No symbol) [0x00007FF79D0EA49D]\n\t(No symbol) [0x00007FF79D0D8B69]\n\tBaseThreadInitThunk [0x00007FFD4E48259D+29]\n\tRtlUserThreadStart [0x00007FFD4F80AF38+40]\n\n", "trace": "  File \"C:\\Users\\alasm\\PROJECT-DIPLOM\\DIPLOM\\tests\\test_branze_page.py\", line 32, in test_industry_card_is_clickable\n    industry_card.click()\n  File \"C:\\Users\\alasm\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\alasm\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\alasm\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\alasm\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1739036513656, "stop": 1739036514764}], "start": 1739036513635, "stop": 1739036514874}], "start": 1739036513635, "stop": 1739036514874, "uuid": "e2ea95c4-763d-491e-92e3-abf940e84c6f", "historyId": "9e3bb962837d2bd28c98624835814d5c", "testCaseId": "9e3bb962837d2bd28c98624835814d5c", "fullName": "tests.test_branze_page#test_industry_card_is_clickable", "labels": [{"name": "feature", "value": "Интерактивность карточек отрасли"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_branze_page"}, {"name": "host", "value": "kachanneee"}, {"name": "thread", "value": "54792-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_branze_page"}]}